package br.com.each.calculos;import java.util.Collection;import br.com.each.modelo.atividadefisica.AtividadeFisica;import br.com.each.modelo.paciente.Intensidade;public class CalculoTempo {	private Intensidade intensidade;	private Double tempo;	private Collection<AtividadeFisica> atividadesFisica;	private CalculoTempo(Collection<AtividadeFisica> atividadesFisica, Intensidade intensidade) {		this.intensidade = intensidade;		this.atividadesFisica = atividadesFisica;		tempo = 0D;	}	public static Double getTempoPorAtividadeLeve(Collection<AtividadeFisica> atividadesFisica) {		return new CalculoTempo(atividadesFisica, Intensidade.LEVE).getTepoPorIntensidade();	}	public static Double getTempoPorAtividadeModerado(Collection<AtividadeFisica> atividadesFisica) {		return new CalculoTempo(atividadesFisica, Intensidade.MODERADO).getTepoPorIntensidade();	}	public static Double getTempoPorAtividadeVigorosa(Collection<AtividadeFisica> atividadesFisica) {		return new CalculoTempo(atividadesFisica, Intensidade.VIGOROSO).getTepoPorIntensidade();	}	public static Double getTempoTotal(Collection<AtividadeFisica> atividadesFisica) {		return new CalculoTempo(atividadesFisica, null).getTepoTotal();	}	private Double getTepoPorIntensidade() {		for (AtividadeFisica atividadeFisica : atividadesFisica) {			tempo = somaTempoConformeAIntesidadeDaAtividade(atividadeFisica);		}		return tempo;	}	private Double somaTempoConformeAIntesidadeDaAtividade(AtividadeFisica atividadeFisica) {		if (atividadeFisica.ehUmaAtividadeComEssa(intensidade)) {			tempo += atividadeFisica.getTempo();		}		return tempo;	}	private Double getTepoTotal() {		for (AtividadeFisica atividadeFisica : atividadesFisica) {			tempo += atividadeFisica.getTempo();		}		return tempo;	}}