package br.com.each.dao;import org.hibernate.Session;import org.hibernate.SessionFactory;import org.hibernate.cfg.Configuration;import org.junit.After;import static org.junit.Assert.*;import org.junit.Before;import org.junit.Test;import br.com.each.modelo.atividade.Atividade;import br.com.each.modelo.atividade.Categoria;import br.com.each.modelo.atividadefisica.AtividadeFisica;import br.com.each.modelo.atividadefisica.DiaDaSemana;import br.com.each.modelo.paciente.Paciente;import br.com.each.modelo.paciente.Pessoa;import br.com.each.modelo.paciente.Sexo;import br.com.each.modelo.user.User;public class PacienteDAOTest {	public Session session;	public SessionFactory sessionFactory;	private User user;	@Test	public void deveRetornarPacientesCotmAtividadetsFisicasCadastradasNoDia7() {		PacienteDAO dao = new PacienteDAO(session);		Paciente paciente = dao.buscaPacienteComAtividadePorDia(user, 7).get(0);		assertEquals(1, paciente.getAtividadesFisica().size());	}	@Test	public void deveRetornarPacientesCotmAtividadetsFisicasCadastradasNaSegundaFeira() {		PacienteDAO dao = new PacienteDAO(session);		Paciente paciente = dao.buscaPacienteComAtividadePorDiaDaSemana(user, DiaDaSemana.SEGUNDA).get(0);		assertEquals(1, paciente.getAtividadesFisica().size());	}	@Test	public void deveRetornarPacientesSemAtividadesFisicasSedentarias() {		PacienteDAO dao = new PacienteDAO(session);		Paciente paciente = dao.buscaPacienteSemAtividadeSedentaria(user).get(0);		assertEquals(1, paciente.getAtividadesFisica().size());	}	@After	public void finish() {		session.beginTransaction().commit();		session.close();		sessionFactory.close();	}	@Before	public void init() {		sessionFactory = new Configuration().configure().buildSessionFactory();		session = sessionFactory.openSession();		session.beginTransaction().begin();		session.createSQLQuery("SET FOREIGN_KEY_CHECKS = 0").executeUpdate();		session.createSQLQuery("truncate table r24af.Paciente").executeUpdate();		session.createSQLQuery("truncate table r24af.Categoria").executeUpdate();		session.createSQLQuery("truncate table r24af.Atividade").executeUpdate();		session.createSQLQuery("truncate table r24af.AtividadeFisica").executeUpdate();		session.createSQLQuery("SET FOREIGN_KEY_CHECKS = 1").executeUpdate();		user = new User("teste", "default");		Pessoa pessoa = new Pessoa("Ricardo Mozart Lino", "kadu.m.lino@hotmail.com", Sexo.Masculino, 182D,				"12/12/2012", 74d);		Paciente paciente = new Paciente(pessoa, user);		Categoria categoria = new Categoria("categoria");		Atividade atividade = new Atividade("Atividade", 1.4, categoria);		Atividade atividade2 = new Atividade("Atividade2", 4, categoria);		AtividadeFisica atividadeFisica = new AtividadeFisica(atividade, 01, 02, 00, 00, 7);		atividadeFisica.setDiaDaSemana(DiaDaSemana.SEGUNDA);		AtividadeFisica atividadeFisica2 = new AtividadeFisica(atividade2, 01, 02, 00, 00, 6);		atividadeFisica2.setDiaDaSemana(DiaDaSemana.TERCA);		session.save(user);		session.save(pessoa);		session.save(categoria);		session.save(atividade);		session.save(atividade2);		session.save(atividadeFisica);		session.save(atividadeFisica2);		paciente.addAtividadeFisica(atividadeFisica);		paciente.addAtividadeFisica(atividadeFisica2);		session.save(paciente);		session.flush();		session.clear();	}}